{"version":3,"sources":["components/User/Navigation/Navigation.js","components/User/Experience/Experience.js","components/User/ExperienceContainer/ExperienceContainer.js","components/User/Skill/Skill.js","components/User/SkillsContainer/SkillsContainer.js","components/User/About/About.js","components/User/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","Container","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Experience","props","Card","experienceData","experienceurl","target","Img","variant","src","experiencefileurl","alt","experiencename","Body","Title","Text","experiencedescription","ExperienceContainer","onNameChange","event","setState","name","value","onDescriptionChange","description","onUrlChange","url","onFileChange","fileExperience","files","onSubmitChange","data","FormData","append","state","fetch","method","body","document","getElementById","reset","experiences","then","resp","json","fluid","this","length","type","color","height","width","Row","map","experience","Col","xs","lg","React","Component","Skill","imgUrl","SkillsContainer","listOfSkills","img","urlWebsite","skill","md","About","Contact","contactName","onAddressChange","contactAddress","onMessageChange","contactMessage","onSubmit","headers","JSON","stringify","address","message","Form","Control","placeholder","onChange","Group","controlId","as","rows","Button","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.e9ab2e1b.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport './Navigation.css';\n\nconst Navigation = () => {\n    return(\n        <header className=\"bg-light\">\n            <Container>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"#\">Mael Landrin</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"ml-navbar\" />\n                    <Navbar.Collapse id=\"ml-navbar\">\n                        <Nav>\n                            <Nav.Link href=\"#aboutScroll\" className=\"animated infinite pulse\">About</Nav.Link>\n                            <Nav.Link href=\"#experienceScroll\" className=\"animated infinite pulse\">Portfolio</Nav.Link>\n                            <Nav.Link href=\"#skillScroll\" className=\"animated infinite pulse\">Skills</Nav.Link>\n                            <Nav.Link href=\"#link\" className=\"animated infinite pulse\">Contact</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </Container>\n        </header>\n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nimport './Experience.css';\n\nconst Experience = (props) => {\n    return(\n        <Card className=\"card-experience\">\n            <a href={props.experienceData.experienceurl} target=\"_blank\" >\n                <Card.Img variant=\"top\" src={props.experienceData.experiencefileurl} alt={props.experienceData.experiencename} />\n                <Card.Body>\n                    <Card.Title>{props.experienceData.experiencename}</Card.Title>\n                    <Card.Text>\n                        {props.experienceData.experiencedescription}\n                    </Card.Text>\n                </Card.Body>\n            </a>\n        </Card>\n    )\n}\n\nexport default Experience;","import React from 'react';\nimport Experience from '../Experience/Experience';\nimport Loader from 'react-loader-spinner'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Form from 'react-bootstrap/Form';\n\nimport './ExperienceContainer.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\nclass ExperienceContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            experiences: [],\n            name: '',\n            description: '',\n            url: '',\n            fileExperience: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://app-d077afa0-d0a4-4d67-8720-1d7a756510d8.cleverapps.io/get-experiences')\n        .then(resp => resp.json())\n        .then(experiences => {\n            this.setState({experiences})\n        })\n    }\n\n    onNameChange = (event) => {\n        this.setState({name: event.target.value});\n    }\n\n    onDescriptionChange = (event) => {\n        this.setState({description: event.target.value});\n    }\n\n    onUrlChange = (event) => {\n        this.setState({url: event.target.value});\n    }\n    \n    onFileChange = (event) => {\n        this.setState({fileExperience: event.target.files[0]});\n    }\n\n    onSubmitChange = () => {\n        const data = new FormData()\n        data.append('url', this.state.url);\n        data.append('name', this.state.name);\n        data.append('description', this.state.description);\n        data.append('fileExperience', this.state.fileExperience);\n        data.append('fileName', this.state.fileExperience.name);\n\n        fetch('https://app-d077afa0-d0a4-4d67-8720-1d7a756510d8.cleverapps.io/new-experience', {\n            method: 'post',\n            body: data\n        })\n\n        this.setState({\n            name: '',\n            description: '',\n            url: '',\n            fileExperience: ''\n        })\n\n        document.getElementById('formExperience').reset();\n        \n    }\n\n    render() {\n        return(\n            <Container fluid={true} className=\"experience\">\n                <Container id=\"experienceScroll\">\n                    <div className=\"experience-section\">\n                        <h2 className=\"text-center\">My experiences</h2>\n                        {\n                            this.state.experiences.length === 0 ? \n                            <div className=\"loader\">\n                                <Loader \n                                type=\"Plane\"\n                                color=\"#00BFFF\"\n                                height={300}\n                                width={300}\n                                /> \n                            </div> :\n                            <div>\n                                <p className=\"text-center\">Here are most of the websites I fully/partly did</p>\n                                <Row>\n                                    {\n                                        this.state.experiences.map(experience => {\n                                            return(\n                                                <Col xs={12} lg={4}>\n                                                    <Experience experienceData = {experience} />\n                                                </Col>\n                                            )\n                                        })\n                                    }                            \n                                </Row>\n                            </div>\n                        }\n                        {/* <p className=\"text-center\">Here are most of the websites I fully/partly did</p>\n                        <Row>\n                            {\n                                this.state.experiences.map(experience => {\n                                    return(\n                                        <Col xs={12} lg={4}>\n                                            <Experience experienceData = {experience} />\n                                        </Col>\n                                    )\n                                })\n                            }                            \n                        </Row> */}\n                    </div>\n                </Container>\n            </Container>\n        )\n    }\n}\n\nexport default ExperienceContainer;","import React from 'react';\nimport Col from 'react-bootstrap/Col';\n\nimport './Skill.css';\n\nconst Skill = (props) => {\n    return(\n        <div className=\"single-skill\">\n            <div className=\"inner-skill\">\n                <div className=\"skill-img-wrap bg-light\">\n                    <img src={props.imgUrl} alt={props.name} />\n                    <h2>{props.name}</h2>\n                </div>\n            </div>  \n        </div>\n    )\n}\n\nexport default Skill;","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Skill from '../Skill/Skill';\nimport Container from 'react-bootstrap/Container';\n\nimport './SkillsContainer.css';\n\n\n\nconst SkillsContainer = (props) => {\n    const listOfSkills = [\n        {\n            name: 'PHP',\n            img: props.urlWebsite+'/img/php.png'\n        },\n        {\n            name: 'JavaScript',\n            img: props.urlWebsite+'/img/javascript.png' \n        },\n        {\n            name: 'Node.js',\n            img: props.urlWebsite+'/img/nodejs.png'\n        },\n        {\n            name: 'React',\n            img: props.urlWebsite+'/img/react.png'\n        },\n        {\n            name: 'CSS',\n            img: props.urlWebsite+'/img/css.png'\n        },\n        {\n            name: 'HTML',\n            img: props.urlWebsite+'/img/html.png'\n        },\n        {\n            name: 'Git',\n            img: props.urlWebsite+'/img/git.png'\n        },\n        {\n            name: 'WordPress',\n            img: props.urlWebsite+'/img/wordpress.png'\n        }\n    ]\n\n    return(\n        <Container fluid={true} className=\"container-fluid skills\">\n            <Container id=\"skillScroll\">\n                <h2 className=\"text-center\">Skills</h2>\n                <div className=\"skillscontainer\">\n                    <Row>\n                        {\n                            listOfSkills.map(skill => {\n                                return (\n                                    <Col xs={12} md={3}>\n                                        <Skill name={skill.name} imgUrl={skill.img} />\n                                    </Col>\n                                )\n                            })\n                        }\n                    </Row>\n                </div>\n            </Container>\n        </Container>\n    )\n}\n\nexport default SkillsContainer;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nimport './About.css';\n\nconst About = () => {\n    return(\n        <Container>\n            <div className=\"about-section\" id=\"aboutScroll\">\n                <h2>About me</h2>\n                <p>I'm a freelance web developer. I dropped out of college without a degree because I was bored of school. I started web development with the basics of HTML and CSS, and learnt on the job.</p>\n                <h2>My skills and experiences</h2>\n                <p>I've been working with WordPress for more than 2 years ( with minimal plugins, only CF7, ACF ), learnt JavaScript for animation purposes during these 2 years. I also started learning React and Node.JS in November 2019.</p>\n                <p>I made this website using React and Node as a training project, and I've got a few projects in mind that I'll add to my own website. So stay tuned :)</p>\n            </div>\n        </Container>\n    )\n}\n\nexport default About;\n\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            contactName: '',\n            contactAddress: '',\n            contactMessage: ''\n        }\n    }\n\n    onNameChange = (event) => {\n        this.setState({\n            contactName: event.target.value\n        })\n    }\n    \n    onAddressChange = (event) => {\n        this.setState({\n            contactAddress: event.target.value\n        })\n    }\n    \n    onMessageChange = (event) => {\n        this.setState({\n            contactMessage: event.target.value\n        })\n    }\n\n    onSubmit = () => {\n        fetch('https://app-d077afa0-d0a4-4d67-8720-1d7a756510d8.cleverapps.io/send-email', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                name: this.state.contactName,\n                address: this.state.contactAddress,\n                message: this.state.contactMessage\n            })\n        })\n    }\n\n    render() {\n        return(\n            <Container className=\"contact-section\">\n                <h2>Contact me</h2>\n                <Form>\n                    <Form.Row className=\"toprow-contact\">\n                        <Col>\n                            <Form.Control id=\"contactName\" placeholder=\"Name\" onChange={this.onNameChange} />\n                        </Col>\n                        <Col>\n                            <Form.Control id=\"contactAddress\" placeholder=\"Email address\" onChange={this.onAddressChange} />\n                        </Col>\n                    </Form.Row>\n                    <Form.Group controlId=\"contactForm.contactMessage\" id=\"contactMessage\">\n                        <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Your message\" onChange={this.onMessageChange} />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.onSubmit}>\n                        Send email\n                    </Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default Contact;\n\n","import React from 'react';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navigation from './components/User/Navigation/Navigation';\nimport ExperienceContainer from './components/User/ExperienceContainer/ExperienceContainer';\nimport SkillsContainer from './components/User/SkillsContainer/SkillsContainer';\nimport About from './components/User/About/About';\nimport Contact from './components/User/Contact/Contact';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      urlWebsite: 'https://downloadpow.github.io/mael-landrin',\n      // isLoggedIn: false,\n    }\n  }\n\n  componentDidMount() {\n    // this.setState({isLoggedIn: true});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <About />\n        <ExperienceContainer />\n        <SkillsContainer urlWebsite={this.state.urlWebsite} />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}